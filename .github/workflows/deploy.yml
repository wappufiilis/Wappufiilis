name: Deploy Telegram Bot

on:
  push:
    branches:
      - "main"

jobs:
  deploy_infrastructure:
    name: Deploy Bot Infrastructure
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: .
    steps:
      - uses: actions/checkout@v2
      - run: zip lambda_function_payload.zip bot.py
      - run: mkdir package
      - run: pip install --target ./package -r requirements.txt
      - run: cd package && zip ../lambda_function_payload.zip ./* && cd ..
      - run: cd terraform

      - uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init
        env:
          TF_CLI_ARGS_init: -backend-config="key=production/terraform.tfstate"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -lock-timeout=5m
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
