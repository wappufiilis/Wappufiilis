name: Deploy Telegram Bot

on:
  push:
    branches:
      - "main"

jobs:
  deploy_infrastructure:
    name: Deploy Bot Infrastructure
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: .
    steps:
      - uses: actions/checkout@v2
      - name: Build deployment package
        run: |
          zip lambda_function_payload.zip *.py \
          && mkdir package \
          && pip install --target ./package -r requirements.txt \
          && cd package && zip ../lambda_function_payload.zip -r ./* && cd .. \
          && mv lambda_function_payload.zip ./terraform/

      - uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
        working-directory: terraform

      - name: Terraform Init
        id: init
        working-directory: terraform
        run: terraform init
        env:
          TF_CLI_ARGS_init: -backend-config="key=production/terraform.tfstate"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Validate
        id: validate
        working-directory: terraform
        run: terraform validate -no-color

      - name: Terraform Apply
        id: apply
        working-directory: terraform
        run: terraform apply -auto-approve -lock-timeout=5m
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_telegram_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
